"use strict";(self.webpackChunkheft_rushstack_io=self.webpackChunkheft_rushstack_io||[]).push([[6971],{158:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(6393);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return r?a.createElement(h,i(i({ref:t},c),{},{components:r})):a.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=r(9122),n=r(2501),o=(r(6393),r(158)),i=["components"],s={title:"Overview",hide_title:!0,custom_edit_url:null},p=void 0,l={unversionedId:"index",id:"index",title:"Overview",description:"Heft is a config-driven toolchain that invokes other popular tools such as TypeScript, ESLint, Jest, Webpack,",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/zh-cn/",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{title:"Overview",hide_title:!0,custom_edit_url:null},sidebar:"docsSidebar",next:{title:"Getting started",permalink:"/zh-cn/pages/intro/getting_started"}},c={},u=[],m={toc:u},d="wrapper";function h(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)(d,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",null,(0,o.kt)("img",{src:"/images/site/heft-logo.svg",alt:"heft",title:"heft",style:{width:"380px",paddingTop:"30px"}}),(0,o.kt)("p",null)),(0,o.kt)("p",null,"Heft is a config-driven toolchain that invokes other popular tools such as TypeScript, ESLint, Jest, Webpack,\nand API Extractor. You can use it to build web applications, Node.js services, command-line tools, libraries,\nand more. Heft builds all your JavaScript projects the same way: A way that works."),(0,o.kt)("p",null,"Heft is typically launched by the ",(0,o.kt)("inlineCode",{parentName:"p"},'"build"')," action from a ",(0,o.kt)("strong",{parentName:"p"},"package.json")," file. It's designed for use in\na monorepo with potentially hundreds of projects, where the ",(0,o.kt)("a",{parentName:"p",href:"https://rushjs.io/"},"Rush")," orchestrator invokes\na ",(0,o.kt)("inlineCode",{parentName:"p"},'"build"')," action separately in each project folder. In this situation, everything must execute as fast as possible.\nSpecial purpose scripts become a headache to maintain, so it's better to replace them with a reusable engine that's\ndriven by config files. In a large repo, you'll want to minimize duplication of these config files across projects.\nUltimately, you'll want to define a small set of stereotypical project types\n(",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/pages/heft/rig_packages/"},'"rigs"'),") that you will maintain, then discourage projects from\noverriding the rig configuration. Being consistent ensures that any person can easily contribute to any project.\nHeft is a ready-made implementation of all these concepts."),(0,o.kt)("p",null,"You don't need a monorepo to use Heft, however. It also works well for small standalone projects. Compared to other\nsimilar systems, Heft has some unique design goals:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Scalable"),": Heft interfaces with the ",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/"},"Rush Stack")," family of tools, which are tailored\nfor large monorepos with many people and projects. Heft doesn't require Rush, though.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Optimized"),": Heft tracks fine-grained performance metrics at each step. The TypeScript plugin implements\nsophisticated optimizations such as: filesystem caching, incremental compilation, multi-target emit,\na unified compiler pass for Jest/Webpack/ESLint, and hosting the compiler in a separate worker process.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Complete"),": Rush Stack aspires to establish a fully worked out solution for building typical TypeScript\nprojects. Unopinionated task abstractions often work against this goal: It is expensive to optimize and support\n(and document!) every possible cocktail of tech choices. The best optimizations and integrations\nmake deep assumptions about how tasks will interact. Although the Heft engine itself is very flexible,\nour philosophy is to agree on a standard approach that covers a broad range of scenarios, then invest in\nmaking the best possible experience for that approach.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Extensible"),": Most projects require at least a few specialized tasks such as preprocessors, postprocessors,\nor loaders. Heft is organized around plugins using the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/tapable"},"tapable"),"\nhook system (familiar from Webpack). It's easy to write your own plugins. Compared to loose architectures\nsuch as Grunt or Gulp, Heft's plugin-system is organized around explicit easy-to-read config files.\nCustomizations generally will extend a standard rig rather than starting from scratch.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Familiar"),": Like Rush, Heft is a regular Node.js application -- developers don't need to install native\nprerequisites such as Python, MSYS2, or the .NET Framework. Heft's source code is easy to understand and debug\nbecause it's 100% TypeScript, the same programming language as your web projects. Developing for native targets\nis still possible, of course.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Professional"),": The Rush Stack projects are developed by and for engineers who ship large scale commercial apps.\nEach feature is designed, discussed in the open, and thoughtfully code reviewed. Breaking changes require\nus to migrate thousands of our own projects, so upgrades are relatively painless compared to typical\nNode.js tooling."))))}h.isMDXComponent=!0}}]);