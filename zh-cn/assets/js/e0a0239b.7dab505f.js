"use strict";(self.webpackChunkheft_rushstack_io=self.webpackChunkheft_rushstack_io||[]).push([[1462],{158:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var i=n(6393);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,h=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(h,s(s({ref:t},c),{},{components:n})):i.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[d]="string"==typeof e?e:a,s[1]=r;for(var p=2;p<o;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var i=n(9122),a=n(2501),o=(n(6393),n(158)),s=["components"],r={title:"Copy files plugin"},l=void 0,p={unversionedId:"pages/plugins/copy-files",id:"pages/plugins/copy-files",title:"Copy files plugin",description:"|     |     |",source:"@site/docs/pages/plugins/copy-files.md",sourceDirName:"pages/plugins",slug:"/pages/plugins/copy-files",permalink:"/zh-cn/pages/plugins/copy-files",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/heft.rushstack.io/docs/pages/plugins/copy-files.md",tags:[],version:"current",frontMatter:{title:"Copy files plugin"},sidebar:"docsSidebar",previous:{title:"API Extractor plugin",permalink:"/zh-cn/pages/plugins/api-extractor"},next:{title:"Delete files plugin",permalink:"/zh-cn/pages/plugins/delete-files"}},c={},d=[{value:"When to use it",id:"when-to-use-it",level:2},{value:"package.json dependencies",id:"packagejson-dependencies",level:2},{value:"Configuration",id:"configuration",level:2},{value:"heft.json plugin options",id:"heftjson-plugin-options",level:2}],u={toc:d},f="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)(f,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Plugin package:")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/microsoft/rushstack/tree/main/apps/heft"},"@rushstack/heft")," (built-in)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Plugin name:")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/microsoft/rushstack/blob/main/apps/heft/heft-plugin.json"},"copy-files-plugin")," implemented by ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/microsoft/rushstack/blob/main/apps/heft/src/plugins/CopyFilesPlugin.ts"},"CopyFilesPlugin.ts"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Plugin config file:")),(0,o.kt)("td",{parentName:"tr",align:null},"(none)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"heft.json options:")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://developer.microsoft.com/json-schemas/heft/v0/copy-files-options.schema.json"},"copy-files-options.schema.json"))))),(0,o.kt)("p",null,"This plugin copies files or folders specified using various wildcards."),(0,o.kt)("h2",{id:"when-to-use-it"},"When to use it"),(0,o.kt)("p",null,"Typical usage scenarios:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'Copying asset files such as images or fonts into a "dist" folder'),(0,o.kt)("li",{parentName:"ul"},"Copying .d.ts files into a ",(0,o.kt)("inlineCode",{parentName:"li"},"temp/typings")," folder before compiling"),(0,o.kt)("li",{parentName:"ul"},"Copying ",(0,o.kt)("inlineCode",{parentName:"li"},"node_modules")," dependencies to be repackaged")),(0,o.kt)("p",null,"Some caveats:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It is NOT RECOMMENDED to use ",(0,o.kt)("inlineCode",{parentName:"li"},"copy-files-plugin")," for copying assets into the TypeScript emit folder;\nuse ",(0,o.kt)("a",{parentName:"li",href:"/zh-cn/pages/plugins/typescript"},"staticAssetsToCopy")," instead, as it interoperates better with\n",(0,o.kt)("inlineCode",{parentName:"li"},"additionalModuleKindsToEmit")," and watch mode."),(0,o.kt)("li",{parentName:"ul"},"Avoid using this task to read/write files outside the project folder. Doing so would violate Rush's\n",(0,o.kt)("a",{parentName:"li",href:"/zh-cn/pages/tutorials/heft_and_rush"},"principle of project isolation"),"."),(0,o.kt)("li",{parentName:"ul"},"Where possible, avoid using inefficient glob operators such as ",(0,o.kt)("inlineCode",{parentName:"li"},"**")," that recursively traverse a directory tree.\nThese disk-intensive operations will slow down the build."),(0,o.kt)("li",{parentName:"ul"},"Overly broad wildcards can sometimes include stray folders that are not tracked by Git.")),(0,o.kt)("h2",{id:"packagejson-dependencies"},"package.json dependencies"),(0,o.kt)("p",null,"None - this feature is built-in to ",(0,o.kt)("inlineCode",{parentName:"p"},"@rushstack/heft"),"."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"copy-files-plugin")," is a built-in plugin loaded directly from ",(0,o.kt)("inlineCode",{parentName:"p"},"@rushstack/heft"),".\nHere's a code sample for a task that loads this plugin:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"<","project folder",">","/config/heft.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "$schema": "https://developer.microsoft.com/json-schemas/heft/v0/heft.schema.json",\n  "extends": "@rushstack/heft-web-rig/profiles/library/config/heft.json",\n\n  "phasesByName": {\n    // ("build" is a user-defined name, not a schema field)\n    "build": {\n      "tasksByName": {\n        // ("post-compile-copy" is a user-defined name, not a schema field)\n        "post-compile-copy": {\n          // The "post-compile-copy" task should not run until after "typescript" completes\n          "taskDependencies": ["typescript"],\n\n          "taskPlugin": {\n            "pluginName": "copy-files-plugin",\n            "pluginPackage": "@rushstack/heft",\n\n            // --------------------------------------------------------------\n            // EXAMPLE OPTIONS FOR copy-files-plugin\n            "options": {\n              "copyOperations": [\n                {\n                  "sourcePath": "assets/images",\n                  "destinationFolders": ["dist"],\n                  "fileExtensions": [ ".png", ".jpg" ]\n                }\n              ]\n            }\n            // --------------------------------------------------------------\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,o.kt)("h2",{id:"heftjson-plugin-options"},"heft.json plugin options"),(0,o.kt)("p",null,"This commented template documents the available options. In the above example, it would get\npasted between the ",(0,o.kt)("inlineCode",{parentName:"p"},"------")," bars."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// OPTIONS FOR copy-files-plugin\n// JSON Schema: https://developer.microsoft.com/json-schemas/heft/v0/copy-files-options.schema.json\n"options": {\n  /**\n   * An array of copy operations to be performed by this task.\n   */\n  "copyOperations": [\n    /**\n     * (REQUIRED) One or more folders that files and folders will be copied into,\n     * relative to the project root.\n     */\n    "destinationFolders": [ "dist" ],\n\n    /**\n     * Absolute path to the source file or folder, relative to the project root.\n     * If "fileExtensions", "excludeGlobs",  or "includeGlobs" are specified, then "sourcePath"\n     * is assumed to be a folder; if it is not a folder, an error will be thrown.\n     * Settings such as "includeGlobs" and "excludeGlobs" will be resolved relative to this path.\n     * If no globs or file extensions are specified, the entire folder will be copied.\n     * If this parameter is not provided, it defaults to the project root.\n     */\n    // "sourcePath": "assets/images",\n\n    /**\n     * If specified, this option recursively scans all folders under "sourcePath" and includes\n     * any files that match the specified extensions.  If "fileExtensions" and "includeGlobs"\n     * are both specified, their selections are added together.\n     */\n    // "fileExtensions": [ ".png" ],\n\n    /**\n     * A list of glob patterns that select files to be copied.  The paths are resolved relative\n     * to "sourcePath", which must be a folder path.  If "fileExtensions" and "includeGlobs"\n     * are both specified, their selections are added together.\n     *\n     * For glob syntax, refer to: https://www.npmjs.com/package/fast-glob\n     */\n    // "includeGlobs": [],\n\n    /**\n     * A list of glob patterns that exclude files or folders from being copied.  The paths are resolved\n     * relative to "sourcePath", which must be a folder path.  These exclusions eliminate items that\n     * were selected by the "includeGlobs" or "fileExtensions" setting.\n     *\n     * For glob syntax, refer to: https://www.npmjs.com/package/fast-glob\n     */\n    // "excludeGlobs": [ "**/temp" ],\n\n    /**\n     * Normally, copying will preserve the path relative to "sourcePath" under the destination folder.\n     * (For example, if "sourcePath" is "src/test" and "destinationFolders" is ["out"], then\n     * "src/test/a/b/c.txt" will be copied to "out/a/b/c.txt".)  Specify "flatten: true" to discard\n     * path information and keep only the filename (for example, "out/c.txt").  If two files have\n     * the same name, an error will be reported. The default value is false.\n     */\n    // "flatten": true,\n\n    /**\n     * If true, filesystem hard links will be created instead of copying the file.  Depending on the\n     * operating system, this may be faster.  The default value is false.\n     *\n     * NOTE: This may cause unexpected behavior if a tool modifies the link. The contained directory\n     * structure will be re-created and all files will be individually hardlinked.  This means that\n     * folders will be new filesystem entities and will have separate folder metadata, while the\n     * contained files will maintain normal hardlink behavior.  This is done since folders do not\n     * have a cross-platform equivalent of a hardlink, and since file symlinks provide fundamentally\n     * different functionality in comparison to hardlinks.\n     */\n    // "hardlink": true\n  ]\n}\n')))}h.isMDXComponent=!0}}]);