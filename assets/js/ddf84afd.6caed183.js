"use strict";(self.webpackChunkheft_rushstack_io=self.webpackChunkheft_rushstack_io||[]).push([[3791],{158:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(6393);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,h=c["".concat(o,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(h,s(s({ref:t},p),{},{components:n})):a.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5989:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(6393),r=n(5881);const i={tabItem:"tabItem_zxeG"};function s(e){var t=e.children,n=e.hidden,s=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,s),hidden:n},t)}},1453:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(9122),r=n(6393),i=n(5881),s=n(1149),l=n(8791),o=n(5602),u=n(7947),p=n(2026);function c(e){return function(e){return r.Children.map(e,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:c(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,i=(0,l.k6)(),s=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,o._X)(s),(0,r.useCallback)((function(e){if(s){var t=new URLSearchParams(i.location.search);t.set(s,e),i.replace(Object.assign({},i.location,{search:t.toString()}))}}),[s,i])]}function f(e){var t,n,a,i,s=e.defaultValue,l=e.queryString,o=void 0!==l&&l,u=e.groupId,c=m(e),f=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:c})})),g=f[0],k=f[1],b=h({queryString:o,groupId:u}),v=b[0],y=b[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,p.Nk)(t),a=n[0],i=n[1],[a,(0,r.useCallback)((function(e){t&&i.set(e)}),[t,i])]),w=N[0],T=N[1],j=function(){var e=null!=v?v:w;return d({value:e,tabValues:c})?e:null}();return(0,r.useLayoutEffect)((function(){j&&k(j)}),[j]),{selectedValue:g,selectValue:(0,r.useCallback)((function(e){if(!d({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);k(e),y(e),T(e)}),[y,T,c]),tabValues:c}}var g=n(7499);const k={tabList:"tabList_ncVf",tabItem:"tabItem_YGAs"};function b(e){var t=e.className,n=e.block,l=e.selectedValue,o=e.selectValue,u=e.tabValues,p=[],c=(0,s.o5)().blockElementScrollPositionUntilNextRender,m=function(e){var t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==l&&(c(t),o(a))},d=function(e){var t,n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var a,r=p.indexOf(e.currentTarget)+1;n=null!=(a=p[r])?a:p[0];break;case"ArrowLeft":var i,s=p.indexOf(e.currentTarget)-1;n=null!=(i=p[s])?i:p[p.length-1]}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,s=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return p.push(e)},onKeyDown:d,onClick:m},s,{className:(0,i.Z)("tabs__item",k.tabItem,null==s?void 0:s.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function v(e){var t=e.lazy,n=e.children,a=e.selectedValue;if(n=Array.isArray(n)?n:[n],t){var i=n.find((function(e){return e.props.value===a}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function y(e){var t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",k.tabList)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function N(e){var t=(0,g.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},2215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>u,metadata:()=>c,toc:()=>d});var a=n(9122),r=n(2501),i=(n(6393),n(158)),s=n(1453),l=n(5989),o=["components"],u={title:"ESlint / TSLint plugins"},p=void 0,c={unversionedId:"pages/plugins/lint",id:"pages/plugins/lint",title:"ESlint / TSLint plugins",description:"|     |     |",source:"@site/docs/pages/plugins/lint.md",sourceDirName:"pages/plugins",slug:"/pages/plugins/lint",permalink:"/pages/plugins/lint",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/heft.rushstack.io/docs/pages/plugins/lint.md",tags:[],version:"current",frontMatter:{title:"ESlint / TSLint plugins"},sidebar:"docsSidebar",previous:{title:"Jest plugin",permalink:"/pages/plugins/jest"},next:{title:"Node.js service plugin",permalink:"/pages/plugins/node-service"}},m={},d=[{value:"When to use it",id:"when-to-use-it",level:2},{value:"package.json dependencies",id:"packagejson-dependencies",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Profiles and mixins",id:"profiles-and-mixins",level:3},{value:"TSLint",id:"tslint",level:2}],h={toc:d},f="wrapper";function g(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(f,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("table",null,(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Plugin package:")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/microsoft/rushstack/blob/main/heft-plugins/heft-lint-plugin"},"@rushstack/heft-lint-plugin"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Plugin name:")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/microsoft/rushstack/blob/main/heft-plugins/heft-lint-plugin/heft-plugin.json"},"lint-plugin")," implemented by ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/microsoft/rushstack/blob/main/heft-plugins/heft-lint-plugin/src/LintPlugin.ts"},"LintPlugin.ts"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Plugin config file:")),(0,i.kt)("td",{parentName:"tr",align:null},"(none)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"heft.json options:")),(0,i.kt)("td",{parentName:"tr",align:null},"(none)")))),(0,i.kt)("p",null,"This plugin invokes the ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/"},"ESLint")," or ",(0,i.kt)("a",{parentName:"p",href:"https://palantir.github.io/tslint/"},"TSLint")," linters, which check your code for stylistic issues and common mistakes."),(0,i.kt)("h2",{id:"when-to-use-it"},"When to use it"),(0,i.kt)("p",null,"TSLint is deprecated (see below). We recommend to use ESLint for all projects, as part of the following combined approach to code validation:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://rushjs.io/pages/maintainer/enabling_prettier/"},"Prettier"),": This tool manages trivial syntax aspects such as spaces, commas, and semicolons. Because these aspects normally don't affect code semantics, we never bother the developer with error messages about it, nor is it part of the build. Instead, Prettier reformats the code automatically via a ",(0,i.kt)("inlineCode",{parentName:"p"},"git commit")," hook. To set this up, see the ",(0,i.kt)("a",{parentName:"p",href:"https://rushjs.io/pages/maintainer/enabling_prettier/"},"Enabling Prettier")," tutorial on the Rush website.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/pages/plugins/typescript"},"TypeScript"),": The TypeScript compiler performs sophisticated type checking and semantic analysis that is the most important safeguard for program correctness.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"ESLint"),": The lint rules supplement the compiler's checks with additional stylistic rules that are more subjective and highly customizable. Whereas TypeScript might detect that ",(0,i.kt)("em",{parentName:"p"},'"This function parameter is a string but was declared as a number"'),", the linter might detect an issue such as ",(0,i.kt)("em",{parentName:"p"},'"This class name should use PascalCase instead of camelCase."')," However operationally ESLint's validation is very similar to type checking, and some ESLint rules require TypeScript semantic analysis, which may depend on project-specific compiler configurations. Therefore we recommend to run ESLint as part of the build, not as a Git commit hook or global analysis.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/pages/plugins/api-extractor"},"API Extractor"),": This is an additional validation check for library packages only. It ensures their API contracts are well-formed and properly documented."))),(0,i.kt)("p",null,"Although it's recommended to set up your build system in this way, Heft doesn't enforce a particular approach. Each of these components is optional, and other configurations are possible. For example, older code bases may need to use TSLint instead of ESLint."),(0,i.kt)("h2",{id:"packagejson-dependencies"},"package.json dependencies"),(0,i.kt)("p",null,"You will need to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint")," package to your project:"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"rush-install",label:"Rush",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# If you are using Rush, run this shell command in your project folder:\nrush add --package eslint --dev\n"))),(0,i.kt)(l.Z,{value:"npm-install",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# If you are using vanilla NPM, run this shell command in your project folder:\nnpm install eslint --save-dev\n")))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If you're using a rig, the ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint")," dependency could be omitted and obtained via ",(0,i.kt)("a",{parentName:"p",href:"/pages/intro/rig_packages"},"rig resolution"),". However, if you use the ",(0,i.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"},"ESLint extension for VS Code"),", it will try to resolve the ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint")," package from your project folder. Thus it is still useful to add ESLint to your ",(0,i.kt)("strong",{parentName:"p"},"package.json")," file. (The extension is able to load a globally installed ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint")," package; however, its version may not match the version required by the local branch.)")),(0,i.kt)("p",null,"If you are using a standard rig such as ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack/tree/main/rigs/heft-node-rig"},"@rushstack/heft-node-rig"),"\nor ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack/tree/main/rigs/heft-web-rig"},"@rushstack/heft-web-rig"),", then ",(0,i.kt)("inlineCode",{parentName:"p"},"@rushstack/heft-lint-plugin"),"\nwill already be loaded and configured."),(0,i.kt)("p",null,"Otherwise, you'll need to add the packages to your project:"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"rush-install",label:"Rush",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# If you are using Rush, run this shell command in your project folder:\nrush add --package @rushstack/heft-lint-plugin --dev\n"))),(0,i.kt)(l.Z,{value:"npm-install",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# If you are using vanilla NPM, run this shell command in your project folder:\nnpm install @rushstack/heft-lint-plugin --save-dev\n")))),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"If the plugin is not already being provided by a rig, your ",(0,i.kt)("a",{parentName:"p",href:"/pages/configs/heft_json"},"heft.json config file")," could invoke it\nlike in this example:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"<","project folder",">","/config/heft.json")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "$schema": "https://developer.microsoft.com/json-schemas/heft/v0/heft.schema.json",\n  . . .\n  "phasesByName": {\n    "build": {\n      "cleanFiles": [{ "sourcePath": "dist" }, { "sourcePath": "lib" }, { "sourcePath": "lib-commonjs" }],\n      "tasksByName": {\n        "typescript": {\n          "taskPlugin": {\n            "pluginPackage": "@rushstack/heft-typescript-plugin"\n          }\n        },\n        "lint": {\n          "taskDependencies": ["typescript"],\n          "taskPlugin": {\n            "pluginPackage": "@rushstack/heft-lint-plugin"\n          }\n        }\n      }\n    }\n    . . .\n  }\n}\n')),(0,i.kt)("p",null,"Heft only invokes the linter if it finds an ESLint config file. Although ESLint supports ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring#configuration-file-formats"},"7 different")," names/formats for this file, Heft requires it to be named ",(0,i.kt)("strong",{parentName:"p"},'".eslintrc.js"'),". This has a couple benefits:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Consistency:")," Using one standard name ",(0,i.kt)("strong",{parentName:"li"},'".eslintrc.js"')," makes it easy to search for these files, perform bulk edits, and copy configuration recipes between projects."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Workarounds:")," Using the ",(0,i.kt)("inlineCode",{parentName:"li"},".js")," file extension enables JavaScript expressions in the file. This practice is generally discouraged because code expressions are harder to validate, and expressions can depend on environmental inputs that are invisible to caches. However, for historical reasons, ESLint's config file format has some limitations that can only be solved with scripts (for example using ",(0,i.kt)("inlineCode",{parentName:"li"},"__dirname")," to resolve file paths).")),(0,i.kt)("p",null,"It's not recommended to place a centralized ",(0,i.kt)("strong",{parentName:"p"},".eslintrc.js")," in the monorepo root folder. This violates Rush's principle that projects should be independent and easily movable between monorepos."),(0,i.kt)("p",null,"Instead, each project should have its own ",(0,i.kt)("strong",{parentName:"p"},".eslintrc.js")," file. We recommend to use the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@rushstack/eslint-config"},"@rushstack/eslint-config")," shared configuration, which is specifically tailored for large scale monorepos, and based on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/typescript-eslint/typescript-eslint"},"typescript-eslint")," parser and ruleset. If you need additional custom lint rules, it's recommended to create a custom NPM package that extends from ",(0,i.kt)("inlineCode",{parentName:"p"},"@rushstack/eslint-config"),"."),(0,i.kt)("p",null,"With this approach, a typical ESLint config file will have very minimal boilerplate. For example:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"<","project folder",">","/.eslintrc.js")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// This is a workaround for https://github.com/eslint/eslint/issues/3458\nrequire('@rushstack/eslint-config/patch/modern-module-resolution');\n\nmodule.exports = {\n  extends: ['@rushstack/eslint-config/profile/node'],\n  parserOptions: { tsconfigRootDir: __dirname }\n};\n")),(0,i.kt)("h3",{id:"profiles-and-mixins"},"Profiles and mixins"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@rushstack/eslint-config")," package currently provides three different ",(0,i.kt)("strong",{parentName:"p"},"lint profiles"),". Choose one:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@rushstack/eslint-config/profile/node")," - for Node.js services"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@rushstack/eslint-config/profile/node-trusted-tool")," - for Node.js tools"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@rushstack/eslint-config/profile/web-app")," - for web browser applications")),(0,i.kt)("p",null,"It also supports ",(0,i.kt)("strong",{parentName:"p"},"lint mixins"),". Add as many as you like:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@rushstack/eslint-config/mixins/react")," - if you use the React framework"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@rushstack/eslint-config/mixins/friendly-locals")," - if you prefer more verbose declarations to make"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@rushstack/eslint-config/mixins/tsdoc")," - if you are using API Extractor in your workspace")),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@rushstack/eslint-config"},"@rushstack/eslint-config documentation")," explains these options in more detail."),(0,i.kt)("h2",{id:"tslint"},"TSLint"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://palantir.github.io/tslint/"},"TSLint")," tool predates ESLint and is now deprecated, but may still be used in some older code bases."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"lint-plugin")," supports both tools: If ",(0,i.kt)("inlineCode",{parentName:"p"},"<project folder>/tslint.json")," is found, then TSLint will be invoked. If both config files are present, then both TSLint and ESLint will be invoked."))}g.isMDXComponent=!0}}]);