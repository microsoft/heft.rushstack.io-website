"use strict";(self.webpackChunkheft_rushstack_io=self.webpackChunkheft_rushstack_io||[]).push([[130],{158:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(6393);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8894:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=n(9122),a=n(2501),o=(n(6393),n(158)),i=["components"],s={title:"Overview",hide_title:!0,custom_edit_url:null},p=void 0,l={unversionedId:"index",id:"version-0.50.0/index",title:"Overview",description:"Heft is a config-driven toolchain that invokes other popular tools such as TypeScript, ESLint, Jest, Webpack,",source:"@site/versioned_docs/version-0.50.0/index.md",sourceDirName:".",slug:"/",permalink:"/0.50.0/",draft:!1,editUrl:null,tags:[],version:"0.50.0",frontMatter:{title:"Overview",hide_title:!0,custom_edit_url:null},sidebar:"docsSidebar",next:{title:"Getting started",permalink:"/0.50.0/pages/intro/getting_started"}},c={},u=[],m={toc:u},d="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",null,(0,o.kt)("img",{src:"/images/site/heft-logo.svg",alt:"heft",title:"heft",style:{width:"380px",paddingTop:"30px"}}),(0,o.kt)("p",null)),(0,o.kt)("p",null,"Heft is a config-driven toolchain that invokes other popular tools such as TypeScript, ESLint, Jest, Webpack,\nand API Extractor. You can use it to build web applications, Node.js services, command-line tools, libraries,\nand more. Heft builds all your JavaScript projects the same way: A way that works."),(0,o.kt)("p",null,"Heft is typically launched by the ",(0,o.kt)("inlineCode",{parentName:"p"},'"build"')," action from a ",(0,o.kt)("strong",{parentName:"p"},"package.json")," file. It's designed for use in\na monorepo with potentially hundreds of projects, where the ",(0,o.kt)("a",{parentName:"p",href:"https://rushjs.io/"},"Rush")," orchestrator invokes\na ",(0,o.kt)("inlineCode",{parentName:"p"},'"build"')," action separately in each project folder. In this situation, everything must execute as fast as possible.\nSpecial purpose scripts become a headache to maintain, so it's better to replace them with a reusable engine that's\ndriven by config files. In a large repo, you'll want to minimize duplication of these config files across projects.\nUltimately, you'll want to define a small set of stereotypical project types\n(",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/pages/heft/rig_packages/"},'"rigs"'),") that you will maintain, then discourage projects from\noverriding the rig configuration. Being consistent ensures that any person can easily contribute to any project.\nHeft is a ready-made implementation of all these concepts."),(0,o.kt)("p",null,"You don\u2019t need a monorepo to use Heft, however. It also works well for small standalone projects. Compared to other\nsimilar systems, Heft has some unique design goals:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Scalable"),": Heft interfaces with the ",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/"},"Rush Stack")," family of tools, which are tailored\nfor large monorepos with many people and projects. Heft doesn't require Rush, though.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Optimized"),": Heft tracks fine-grained performance metrics at each step. Although Heft is still in its\nearly stages, the TypeScript plugin already implements sophisticated optimizations such as: filesystem caching,\nincremental compilation, symlinking of cache files to reduce copy times, hosting the compiler in a separate\nworker process, and a unified compiler pass for Jest and Webpack.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Complete"),": Rush Stack aspires to establish a fully worked out solution for building typical TypeScript\nprojects. Unopinionated task abstractions often work against this goal: It is expensive to optimize and support\n(and document!) every possible cocktail of tech choices. The best optimizations and integrations\nmake lots of assumptions about how tasks will interact. Heft is opinionated. Our aim is to agree on a recommended\ntoolkit that works well for a broad range of scenarios, then work together on the deep investments that will\nmake that a great experience.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Extensible"),": Most projects require at least a few specialized tasks such as preprocessors, postprocessors,\nor loaders. Heft is composed of plugins using the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/tapable"},"tapable"),'\nhook system (familiar from Webpack). It\'s easy to write your own plugins. Compared to loose architectures\nsuch as Grunt or Gulp, Heft ships a predefined arrangement of "stages" that custom tasks hook into. Having\na standardized starting point makes it easier to get technical support for customized rigs.')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Familiar"),": Like Rush, Heft is a regular Node.js application -- developers don't need to install native\nprerequisites such as Python, MSYS2, or the .NET Framework. Heft's source code is easy to understand and debug\nbecause it's 100% TypeScript, the same programming language as your web projects. Developing for native targets\nis still possible, of course.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Professional"),": The Rush Stack projects are developed by and for engineers who ship major commercial services.\nEach feature is designed, discussed in the open, and thoughtfully code reviewed. Despite being a free community\ncollaboration, this software is developed with the mindset that we'll be depending on it for many years to come."))))}h.isMDXComponent=!0}}]);